// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Spec.MyAccount
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ChangePassword")]
    [NUnit.Framework.CategoryAttribute("ChangePassword")]
    public partial class ChangePasswordFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ChangePassword.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ChangePassword", "I want to be able to change my password.", ProgrammingLanguage.CSharp, new string[] {
                        "ChangePassword"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NCU - Should display validation messages when trying to change passwor" +
            "d without entering any data")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        public virtual void MyAccountNCU_ShouldDisplayValidationMessagesWhenTryingToChangePasswordWithoutEnteringAnyData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NCU - Should display validation messages when trying to change passwor" +
                    "d without entering any data", new string[] {
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("I try to change password without entering any data to the textboxes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("there should be Please enter your old password validation messages displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.Then("there should be Please enter your new password  validation messages displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.Then("there should be Please confirm your new password validation messages displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NCU - Should display validation message when entered incorrect old pas" +
            "sword")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        public virtual void MyAccountNCU_ShouldDisplayValidationMessageWhenEnteredIncorrectOldPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NCU - Should display validation message when entered incorrect old pas" +
                    "sword", new string[] {
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.When("I try to change password by using incorrect old password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("there should be The details you have provided are invalid. Please re-enter and tr" +
                    "y again message displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NCU - Should not change password when password confirmation is not the" +
            " same")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        public virtual void MyAccountNCU_ShouldNotChangePasswordWhenPasswordConfirmationIsNotTheSame()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NCU - Should not change password when password confirmation is not the" +
                    " same", new string[] {
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.When("I try to change password by using incorrect confirmation password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("there should be Your new passwords do not match validation messages displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NBO - Should display validation messages when trying to change passwor" +
            "d without entering any data")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        public virtual void MyAccountNBO_ShouldDisplayValidationMessagesWhenTryingToChangePasswordWithoutEnteringAnyData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NBO - Should display validation messages when trying to change passwor" +
                    "d without entering any data", new string[] {
                        "managingip.com"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When("I try to change password without providing any data to the textboxes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("there should be \"You must enter your old password\" validation message displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.Then("there should be \"You must enter a new password\" validation message displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.Then("there should be \"You must confirm your new password\" validation message displayed" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NBO - Should display validation message when entered incorrect old pas" +
            "sword")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        public virtual void MyAccountNBO_ShouldDisplayValidationMessageWhenEnteredIncorrectOldPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NBO - Should display validation message when entered incorrect old pas" +
                    "sword", new string[] {
                        "managingip.com"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
 testRunner.Given("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.When("I try to change password by using incorrect old password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("there should be The old password is not correct message displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NBO - Should not change password when password confirmation is not the" +
            " same")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        public virtual void MyAccountNBO_ShouldNotChangePasswordWhenPasswordConfirmationIsNotTheSame()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NBO - Should not change password when password confirmation is not the" +
                    " same", new string[] {
                        "managingip.com"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.When("I try to change password by providing incorrect confirmation password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("there should be \"The new passwords must match\" validation message displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NBO - Should change password when correct input provided")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        public virtual void MyAccountNBO_ShouldChangePasswordWhenCorrectInputProvided()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NBO - Should change password when correct input provided", new string[] {
                        "managingip.com"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given("I\'ve created a new account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.And("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.When("I change my password correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("Password Updated message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NCU - Should change password when correct input provided")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        public virtual void MyAccountNCU_ShouldChangePasswordWhenCorrectInputProvided()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NCU - Should change password when correct input provided", new string[] {
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("I\'ve created a new account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When("I change my password correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("Password Updated page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("My account NCU - Should display passoword updated page correctly")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        public virtual void MyAccountNCU_ShouldDisplayPassowordUpdatedPageCorrectly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My account NCU - Should display passoword updated page correctly", new string[] {
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
 testRunner.Given("I\'ve created a new account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
 testRunner.And("I\'m on the My Account Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.When("I change my password correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.Then("Password Updated pageshould be displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
