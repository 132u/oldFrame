// -----------------------------------------------------------------------
// <copyright file="FreeTrialStepTwoPage.cs" company="Euromoney">
// TODO: Update copyright text.
// </copyright>
// <auto-generated />
// -----------------------------------------------------------------------
namespace PageObjects.PageObjects
{
	using System.Collections.Generic;
	using System.Globalization;
	using Core;
	using Core.Controls;
	using Core.Configuration;
	using ConfigManager;

	/// <summary> 
	/// Initializes a new instance of the FreeTrialStepTwoPage class
	/// </summary>
	public partial class FreeTrialStepTwoPage 
	{	
		public FreeTrialStepTwoPage(bool optional=false)
		{
			this.Optional = optional;
		}


		/// <summary>
		/// Gets YourDetailsHeader Label
		/// </summary> 
		private Label YourDetailsHeader
		{
			get { return new Label("YourDetailsHeader", "//*[contains(text(), 'Your details')]", 0, false); }
		}

		/// <summary>
		/// Gets Title Dropdown
		/// </summary> 
		private Dropdown Title
		{
			get { return new Dropdown("Title", "//div[@class='personaldetails']/select[contains(@name, 'Title')]", 0, false); }
		}

		/// <summary>
		/// Gets FirstName Textbox
		/// </summary> 
		private Textbox FirstName
		{
			get { return new Textbox("FirstName", "//div[@class='personaldetails']/input[contains(@name, 'FirstName')]", 0, false); }
		}

		/// <summary>
		/// Gets LastName Textbox
		/// </summary> 
		private Textbox LastName
		{
			get { return new Textbox("LastName", "//div[@class='personaldetails']/input[contains(@name, 'LastName')]", 0, false); }
		}

		/// <summary>
		/// Gets JobTitle Textbox
		/// </summary> 
		private Textbox JobTitle
		{
			get { return new Textbox("JobTitle", "//div[@class='personaldetails']/input[contains(@name, 'Position')]", 0, false); }
		}

		/// <summary>
		/// Gets CompanyName Textbox
		/// </summary> 
		private Textbox CompanyName
		{
			get { return new Textbox("CompanyName", "//div[@class='personaldetails']/input[contains(@name, 'CompanyName')]", 0, false); }
		}

		/// <summary>
		/// Gets CompanyPosition Dropdown
		/// </summary> 
		private Dropdown CompanyPosition
		{
			get { return new Dropdown("CompanyPosition", "//fieldset[legend[text()='YOUR DETAILS']]//select[contains(@id, 'Position')]", 0, true); }
		}

		/// <summary>
		/// Gets CompanyType Dropdown
		/// </summary> 
		private Dropdown CompanyType
		{
			get { return new Dropdown("CompanyType", "//fieldset[legend[text()='YOUR DETAILS']]//select[contains(@id, 'CompanyType')]", 0, true); }
		}

		/// <summary>
		/// Gets Country Dropdown
		/// </summary> 
		private Dropdown Country
		{
			get { return new Dropdown("Country", "//div[@class='deliveryaddress']/select[contains(@name, 'Country')]", 0, false); }
		}

		/// <summary>
		/// Gets PrivacyPolicy Checkbox
		/// </summary> 
		private Checkbox PrivacyPolicy
		{
			get { return new Checkbox("PrivacyPolicy", "//input[@id=//label[a[text()='Privacy Policy']]/@for]", 0, false); }
		}

		/// <summary>
		/// Gets TermsAndConditions Checkbox
		/// </summary> 
		private Checkbox TermsAndConditions
		{
			get { return new Checkbox("TermsAndConditions", "//input[@id=//label[a[text()='Terms and Conditions']]/@for]", 0, false); }
		}

		/// <summary>
		/// Gets AddressFirstLine Textbox
		/// </summary> 
		private Textbox AddressFirstLine
		{
			get { return new Textbox("AddressFirstLine", "//input[contains(@id, 'Address1')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressSecondLine Textbox
		/// </summary> 
		private Textbox AddressSecondLine
		{
			get { return new Textbox("AddressSecondLine", "//fieldset[legend[text()='ADDRESS']]//input[contains(@id, 'Address2')]", 0, true); }
		}

		/// <summary>
		/// Gets City Textbox
		/// </summary> 
		private Textbox City
		{
			get { return new Textbox("City", "//input[contains(@id, 'City')]", 0, false); }
		}

		/// <summary>
		/// Gets PostCode Textbox
		/// </summary> 
		private Textbox PostCode
		{
			get { return new Textbox("PostCode", "//input[contains(@id, 'Post')]", 0, false); }
		}

		/// <summary>
		/// Gets Telephone Textbox
		/// </summary> 
		private Textbox Telephone
		{
			get { return new Textbox("Telephone", "//input[contains(@id, 'Telephone')]", 0, false); }
		}

		/// <summary>
		/// Gets Submit Button
		/// </summary> 
		private Button Submit
		{
			get { return new Button("Submit", "//input[@value='Submit']", 0, false); }
		}

		/// <summary>
		/// Gets TitleValidationMessage Label
		/// </summary> 
		private Label TitleValidationMessage
		{
			get { return new Label("TitleValidationMessage", "//span[contains(@id, 'UserDetails_rfvTitle') and contains(@style, 'visibility: visible')]", 0, false); }
		}

		/// <summary>
		/// Gets FirstNameValidationMessage Label
		/// </summary> 
		private Label FirstNameValidationMessage
		{
			get { return new Label("FirstNameValidationMessage", "//span[contains(., 'You must enter a first name') and contains(@style, 'display: inline')]", 0, false); }
		}

		/// <summary>
		/// Gets LastNameValidationMessage Label
		/// </summary> 
		private Label LastNameValidationMessage
		{
			get { return new Label("LastNameValidationMessage", "//span[contains(., 'You must enter a surname') and contains(@style, 'display: inline')]", 0, false); }
		}

		/// <summary>
		/// Gets JobTitleValidationMessage Label
		/// </summary> 
		private Label JobTitleValidationMessage
		{
			get { return new Label("JobTitleValidationMessage", "//span[contains(., 'You must enter a job title') and contains(@style, 'display: inline')]", 0, false); }
		}

		/// <summary>
		/// Gets CompanyNameValidationMessage Label
		/// </summary> 
		private Label CompanyNameValidationMessage
		{
			get { return new Label("CompanyNameValidationMessage", "//span[contains(., 'You must enter a company name') and contains(@style, 'display: inline')]", 0, false); }
		}

		/// <summary>
		/// Gets CompanyPositionValidationMessage Label
		/// </summary> 
		private Label CompanyPositionValidationMessage
		{
			get { return new Label("CompanyPositionValidationMessage", "//span[contains(., 'Please select a position') and contains(@style, 'display: inline')]", 0, true); }
		}

		/// <summary>
		/// Gets CompanyTypeValidationMessage Label
		/// </summary> 
		private Label CompanyTypeValidationMessage
		{
			get { return new Label("CompanyTypeValidationMessage", "//span[contains(., 'Please select a company type') and contains(@style, 'display: inline')]", 0, true); }
		}

		/// <summary>
		/// Gets AddressFirstLineValidationMessage Label
		/// </summary> 
		private Label AddressFirstLineValidationMessage
		{
			get { return new Label("AddressFirstLineValidationMessage", "//span[text()='You must enter the first line of your address']", 0, false); }
		}

		/// <summary>
		/// Gets AddressSecondLineValidationMessage Label
		/// </summary> 
		private Label AddressSecondLineValidationMessage
		{
			get { return new Label("AddressSecondLineValidationMessage", "//span[text()='You must enter the second line of your address']", 0, true); }
		}

		/// <summary>
		/// Gets TelephoneNumberValidationMessage Label
		/// </summary> 
		private Label TelephoneNumberValidationMessage
		{
			get { return new Label("TelephoneNumberValidationMessage", "//span[contains(@id, 'UserDetails_rfvTelephone') and contains(@style, 'display: inline')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressValidationMessage Label
		/// </summary> 
		private Label AddressValidationMessage
		{
			get { return new Label("AddressValidationMessage", "//span[contains(@id, 'rfvAddressLine1') and contains(@style, 'visibility: visible')]", 0, false); }
		}

		/// <summary>
		/// Gets CityValidationMessage Label
		/// </summary> 
		private Label CityValidationMessage
		{
			get { return new Label("CityValidationMessage", "//span[contains(@id, 'rfvCity') and contains(@style, 'visibility: visible')]", 0, false); }
		}

		/// <summary>
		/// Gets ZipValidationMessage Label
		/// </summary> 
		private Label ZipValidationMessage
		{
			get { return new Label("ZipValidationMessage", "//span[contains(@id, 'Zip') and contains(@style, 'visibility: visible')]", 0, false); }
		}

		/// <summary>
		/// Gets CountryValidationMessage Label
		/// </summary> 
		private Label CountryValidationMessage
		{
			get { return new Label("CountryValidationMessage", "//span[contains(@id, 'Countries') and contains(@style, 'visibility: visible')]", 0, false); }
		}

		/// <summary>
		/// Gets FreeTrialStepTwoSignUpStatus list
		/// </summary>
		public RequiredElements FreeTrialStepTwoSignUpStatus
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoSignUpStatus",
					Xpath = "//ol[@class='checkout']",
					Filter = "li",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "li",
							Type = "li",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Email validation"}
							}
						}, new Element
						{
							Name = "li",
							Type = "li",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Details"}
							}
						}, new Element
						{
							Name = "li",
							Type = "li",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Confirmation"}
							}
						}
					}
				};
			}
		}

		/// <summary>
		/// Gets FreeTrialStepTwoYourDetailsSection list
		/// </summary>
		public RequiredElements FreeTrialStepTwoYourDetailsSection
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoYourDetailsSection",
					Xpath = "//div[@class='personaldetails']",
					Filter = "label|p|h2",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "h2",
							Type = "h2",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Your details"}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Enter your details below, selecting from the options shown."}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Fields marked * are mandatory."}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblTitle"},
								{"innerText","Title:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","lblFirstName"},
								{"innerText","First Name: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","lblLastName"},
								{"innerText","Last Name: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","lblJobTitle"},
								{"innerText","Job Title: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","lblCompanyName"},
								{"innerText","Company Name: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Americas"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Asia"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Emerging Europe"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Global"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Middle East & Africa"}
							}
						}
					}
				};
			}
		}

		/// <summary>
		/// Gets FreeTrialStepTwoDeliveryAddressSection list
		/// </summary>
		public RequiredElements FreeTrialStepTwoDeliveryAddressSection
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoDeliveryAddressSection",
					Xpath = "//div[@class='deliveryaddress']",
					Filter = "label|p|h2",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "h2",
							Type = "h2",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Delivery address"}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Fields marked * are mandatory."}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblAddress1"},
								{"innerText","Address 1:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblAddress2"},
								{"innerText","Address 2:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblAddress3"},
								{"innerText","Address 3:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","City:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblCounty"},
								{"innerText","County:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblZipCode"},
								{"innerText","Zip/Postal Code:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblCountry"},
								{"innerText","Country: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblEmailAddress"},
								{"innerText","Email Address: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblTelephone"},
								{"innerText","Telephone:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_cphMain_chkCheckout_PurchaseContainer_lblFax"},
								{"innerText","Fax:"}
							}
						}
					}
				};
			}
		}

		/// <summary>
		/// Gets FreeTrialStepTwoEmailPreferencesSection list
		/// </summary>
		public RequiredElements FreeTrialStepTwoEmailPreferencesSection
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoEmailPreferencesSection",
					Xpath = "//div[@class='emailPrefs']",
					Filter = "p|h2|tr",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "h2",
							Type = "h2",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Email preferences"}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText",""}
							}
						}, new Element
						{
							Name = "tr",
							Type = "tr",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Emerging Markets News Alerts - Emerging Markets News Alerts"}
							}
						}, new Element
						{
							Name = "tr",
							Type = "tr",
							Attributes = new Dictionary<string, string>
							{
								{"innerText",""}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Email Format (Text version recommended for Lotus Notes and BlackBerry users)"}
							}
						}
					}
				};
			}
		}

		/// <summary>
		/// Gets FreeTrialStepTwoDataProtectionSection list
		/// </summary>
		public RequiredElements FreeTrialStepTwoDataProtectionSection
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoDataProtectionSection",
					Xpath = "//div[@class='dataprotection']",
					Filter = "label|p|h2",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "h2",
							Type = "h2",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Data protection"}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Emerging Markets is part of the Euromoney Institutional Investor      PLC group of companies. Click       here for more details on our group’s activities."}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","We will use the information you provide here to process your      order/registration/request including communicating with you about it. If      you are registering for a trial, you will receive follow up emails and/or      a telephone call about your trial. As part of the trial, you may also      receive email updates and other features as specified for that product.      We may monitor your use of our website(s). As an international group, we      may transfer your data on a global basis. Subject to your choices below,      we may also use your data for marketing purposes. By submitting your      details, you will be indicating your consent to the use of your data as      identified here. Further information is set out in our privacy policy on      this site."}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Please tick if you don't want to receive details of products, services      and special offers from our group companies by:	      Telephone      Fax      Email      Mail            Please tick if you don't want to receive details of relevant products,      services and special offers from selected companies outside our group      ."}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Telephone"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Fax"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Email"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Mail"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","."}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","I have read and agree to the Privacy Policy  Please tick to confirm agreement and press continue.      I have read and agree to the Terms and Conditions  Please tick to confirm agreement and press continue."}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","I have read and agree to the Privacy Policy"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","I have read and agree to the Terms and Conditions"}
							}
						}
					}
				};
			}
		}

	}
}
	
