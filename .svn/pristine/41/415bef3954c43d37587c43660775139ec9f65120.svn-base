// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Spec.Homepage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Login")]
    [NUnit.Framework.CategoryAttribute("Login")]
    public partial class LoginFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Login.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Login", "I want to be able to login to the user account.\r\nI want to be able to logout from" +
                    " the user account.", ProgrammingLanguage.CSharp, new string[] {
                        "Login"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I\'m on the Login Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login - Should display login page correctly")]
        [NUnit.Framework.CategoryAttribute("capacityconferences.com")]
        [NUnit.Framework.CategoryAttribute("euromoneytraining.com")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        [NUnit.Framework.CategoryAttribute("indmin.com")]
        [NUnit.Framework.CategoryAttribute("hedgefundintelligence.com")]
        [NUnit.Framework.CategoryAttribute("globaltelecomsbusiness.com")]
        public virtual void Login_ShouldDisplayLoginPageCorrectly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login - Should display login page correctly", new string[] {
                        "capacityconferences.com",
                        "euromoneytraining.com",
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "managingip.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com",
                        "indmin.com",
                        "hedgefundintelligence.com",
                        "globaltelecomsbusiness.com"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 13
 testRunner.Then("Login page should be displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login - Should login with correct credentials")]
        [NUnit.Framework.CategoryAttribute("capacityconferences.com")]
        [NUnit.Framework.CategoryAttribute("euromoneytraining.com")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        [NUnit.Framework.CategoryAttribute("indmin.com")]
        [NUnit.Framework.CategoryAttribute("hedgefundintelligence.com")]
        [NUnit.Framework.CategoryAttribute("globaltelecomsbusiness.com")]
        public virtual void Login_ShouldLoginWithCorrectCredentials()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login - Should login with correct credentials", new string[] {
                        "capacityconferences.com",
                        "euromoneytraining.com",
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "managingip.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com",
                        "indmin.com",
                        "hedgefundintelligence.com",
                        "globaltelecomsbusiness.com"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 19
 testRunner.When("I login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("I should be logged in to user account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login - Should fail to login with incorrect user name and correct password")]
        [NUnit.Framework.CategoryAttribute("capacityconferences.com")]
        [NUnit.Framework.CategoryAttribute("euromoneytraining.com")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        [NUnit.Framework.CategoryAttribute("indmin.com")]
        [NUnit.Framework.CategoryAttribute("hedgefundintelligence.com")]
        [NUnit.Framework.CategoryAttribute("globaltelecomsbusiness.com")]
        public virtual void Login_ShouldFailToLoginWithIncorrectUserNameAndCorrectPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login - Should fail to login with incorrect user name and correct password", new string[] {
                        "capacityconferences.com",
                        "euromoneytraining.com",
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "managingip.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com",
                        "indmin.com",
                        "hedgefundintelligence.com",
                        "globaltelecomsbusiness.com"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 26
 testRunner.When("I try to login with incorrect username", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("I shouldn\'t be logged in to user account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login - Should fail to login with correct user name and incorrect password")]
        [NUnit.Framework.CategoryAttribute("capacityconferences.com")]
        [NUnit.Framework.CategoryAttribute("euromoneytraining.com")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        [NUnit.Framework.CategoryAttribute("indmin.com")]
        [NUnit.Framework.CategoryAttribute("hedgefundintelligence.com")]
        [NUnit.Framework.CategoryAttribute("globaltelecomsbusiness.com")]
        public virtual void Login_ShouldFailToLoginWithCorrectUserNameAndIncorrectPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login - Should fail to login with correct user name and incorrect password", new string[] {
                        "capacityconferences.com",
                        "euromoneytraining.com",
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "managingip.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com",
                        "indmin.com",
                        "hedgefundintelligence.com",
                        "globaltelecomsbusiness.com"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 33
 testRunner.When("I try to login with incorrect password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("I shouldn\'t be logged in to user account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login - Should fail to login with incorrect user name and password")]
        [NUnit.Framework.CategoryAttribute("capacityconferences.com")]
        [NUnit.Framework.CategoryAttribute("euromoneytraining.com")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        [NUnit.Framework.CategoryAttribute("indmin.com")]
        [NUnit.Framework.CategoryAttribute("hedgefundintelligence.com")]
        [NUnit.Framework.CategoryAttribute("globaltelecomsbusiness.com")]
        public virtual void Login_ShouldFailToLoginWithIncorrectUserNameAndPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login - Should fail to login with incorrect user name and password", new string[] {
                        "capacityconferences.com",
                        "euromoneytraining.com",
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "managingip.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com",
                        "indmin.com",
                        "hedgefundintelligence.com",
                        "globaltelecomsbusiness.com"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 40
 testRunner.When("I try to login with incorrect username and password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("I shouldn\'t be logged in to user account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login - Should logout successfully")]
        [NUnit.Framework.CategoryAttribute("capacityconferences.com")]
        [NUnit.Framework.CategoryAttribute("euromoneytraining.com")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("euromoneyconferences.com")]
        [NUnit.Framework.CategoryAttribute("indmin.com")]
        [NUnit.Framework.CategoryAttribute("hedgefundintelligence.com")]
        [NUnit.Framework.CategoryAttribute("globaltelecomsbusiness.com")]
        public virtual void Login_ShouldLogoutSuccessfully()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login - Should logout successfully", new string[] {
                        "capacityconferences.com",
                        "euromoneytraining.com",
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "managingip.com",
                        "capacitymagazine.com",
                        "euromoneyconferences.com",
                        "indmin.com",
                        "hedgefundintelligence.com",
                        "globaltelecomsbusiness.com"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 47
 testRunner.When("I login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then("I should be logged in to user account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
 testRunner.When("I logout correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("I should be logged out from the user account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
