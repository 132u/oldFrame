// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Spec.Articles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Articles")]
    [NUnit.Framework.CategoryAttribute("Articles")]
    public partial class ArticlesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Articles.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Articles", "I want to be able to add comment to the article.", ProgrammingLanguage.CSharp, new string[] {
                        "Articles"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Article - should display article page correctly")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        public virtual void Article_ShouldDisplayArticlePageCorrectly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Article - should display article page correctly", new string[] {
                        "emergingmarkets.org",
                        "managingip.com",
                        "petroleumeconomist.com",
                        "capacitymagazine.com"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I\'m on the first article page in the News section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.Then("Article page should be displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Article - should be able to add comment when logged in")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        public virtual void Article_ShouldBeAbleToAddCommentWhenLoggedIn()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Article - should be able to add comment when logged in", new string[] {
                        "emergingmarkets.org",
                        "managingip.com",
                        "petroleumeconomist.com",
                        "capacitymagazine.com"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.Given("I\'m on the first article page in the News section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.Then("I should be able to add comment to the article", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Article - shouldn\'t add comment when not logged in")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        public virtual void Article_ShouldnTAddCommentWhenNotLoggedIn()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Article - shouldn\'t add comment when not logged in", new string[] {
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "capacitymagazine.com"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I\'m not logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.When("I have entered article in the News section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then("I shouldn\'t be able to add comment to the article", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Article - should add comment when all required fields are filled")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        public virtual void Article_ShouldAddCommentWhenAllRequiredFieldsAreFilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Article - should add comment when all required fields are filled", new string[] {
                        "emergingmarkets.org",
                        "petroleumeconomist.com"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("I\'m on the first article page in the News section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.When("All required fields on the add comment section are filled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("Comment should be added correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Article - shouldn\'t add comment when You name textbox is empty")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        public virtual void Article_ShouldnTAddCommentWhenYouNameTextboxIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Article - shouldn\'t add comment when You name textbox is empty", new string[] {
                        "emergingmarkets.org",
                        "managingip.com",
                        "petroleumeconomist.com",
                        "capacitymagazine.com"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I\'m on the first article page in the News section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
 testRunner.When("Your name/commenter name is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("Comment shouldn\'t be added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Article - shouldn\'t add comment when Your email address textbox is empty")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        public virtual void Article_ShouldnTAddCommentWhenYourEmailAddressTextboxIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Article - shouldn\'t add comment when Your email address textbox is empty", new string[] {
                        "emergingmarkets.org",
                        "petroleumeconomist.com",
                        "capacitymagazine.com"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
 testRunner.Given("I\'m on the first article page in the News section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.When("Your email address is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("Comment shouldn\'t be added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Article - shouldn\'t add comment when Your comments textbox is empty")]
        [NUnit.Framework.CategoryAttribute("emergingmarkets.org")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        [NUnit.Framework.CategoryAttribute("petroleumeconomist.com")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        public virtual void Article_ShouldnTAddCommentWhenYourCommentsTextboxIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Article - shouldn\'t add comment when Your comments textbox is empty", new string[] {
                        "emergingmarkets.org",
                        "managingip.com",
                        "petroleumeconomist.com",
                        "capacitymagazine.com"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I\'m on the first article page in the News section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.When("Your comments is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("Comment shouldn\'t be added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Article - shouldn\'t add comment when captcha is empty")]
        [NUnit.Framework.CategoryAttribute("capacitymagazine.com")]
        [NUnit.Framework.CategoryAttribute("managingip.com")]
        public virtual void Article_ShouldnTAddCommentWhenCaptchaIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Article - shouldn\'t add comment when captcha is empty", new string[] {
                        "capacitymagazine.com",
                        "managingip.com"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given("I\'m on the first article page in the News section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.When("All required fields on the add comment section are filled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.But("Captcha field is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "But ");
#line 50
 testRunner.Then("Comment shouldn\'t be added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
