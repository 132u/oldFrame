// -----------------------------------------------------------------------
// <copyright file="SubscribeStepThreePage.cs" company="Euromoney">
// TODO: Update copyright text.
// </copyright>
// <auto-generated />
// -----------------------------------------------------------------------
namespace PageObjects.PageObjects
{
	using System.Collections.Generic;
	using System.Globalization;
	using Core;
	using Core.Controls;
	using Core.Configuration;
	using ConfigManager;

	/// <summary> 
	/// Initializes a new instance of the SubscribeStepThreePage class
	/// </summary>
	public partial class SubscribeStepThreePage 
	{	
		public SubscribeStepThreePage(bool optional=false)
		{
			this.Optional = optional;
		}


		/// <summary>
		/// Gets YourDetailsHeader Label
		/// </summary> 
		private Label YourDetailsHeader
		{
			get { return new Label("YourDetailsHeader", "//h2[text()='YOUR DETAILS']", 0, false); }
		}

		/// <summary>
		/// Gets Title Dropdown
		/// </summary> 
		private Dropdown Title
		{
			get { return new Dropdown("Title", "//select[contains(@id,'Title')]", 0, false); }
		}

		/// <summary>
		/// Gets FirstName Textbox
		/// </summary> 
		private Textbox FirstName
		{
			get { return new Textbox("FirstName", "//input[contains(@id,'FirstName')]", 0, false); }
		}

		/// <summary>
		/// Gets LastName Textbox
		/// </summary> 
		private Textbox LastName
		{
			get { return new Textbox("LastName", "//input[contains(@id,'LastName')]", 0, false); }
		}

		/// <summary>
		/// Gets JobTitle Textbox
		/// </summary> 
		private Textbox JobTitle
		{
			get { return new Textbox("JobTitle", "//input[contains(@id,'Position')]", 0, false); }
		}

		/// <summary>
		/// Gets CompanyName Textbox
		/// </summary> 
		private Textbox CompanyName
		{
			get { return new Textbox("CompanyName", "//input[contains(@id,'CompanyName')]", 0, false); }
		}

		/// <summary>
		/// Gets CompanyPosition Dropdown
		/// </summary> 
		private Dropdown CompanyPosition
		{
			get { return new Dropdown("CompanyPosition", "//span[contains(., 'Please select a position') and contains(@style, 'display: inline')]", 0, true); }
		}

		/// <summary>
		/// Gets CompanyType Dropdown
		/// </summary> 
		private Dropdown CompanyType
		{
			get { return new Dropdown("CompanyType", "//select[contains(@id,'CompanyType')]", 0, false); }
		}

		/// <summary>
		/// Gets State Dropdown
		/// </summary> 
		private Dropdown State
		{
			get { return new Dropdown("State", "//select[contains(@id,'PurchaseContainer_State')]", 0, false); }
		}

		/// <summary>
		/// Gets ORCountry Textbox
		/// </summary> 
		private Textbox ORCountry
		{
			get { return new Textbox("ORCountry", "//input[contains(@id,'PurchaseContainer_County')]", 0, false); }
		}

		/// <summary>
		/// Gets YourReference Textbox
		/// </summary> 
		private Textbox YourReference
		{
			get { return new Textbox("YourReference", "//input[contains(@id,'ReferenceText')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressThirdLine Textbox
		/// </summary> 
		private Textbox AddressThirdLine
		{
			get { return new Textbox("AddressThirdLine", "//input[contains(@id, 'Address3')]", 0, false); }
		}

		/// <summary>
		/// Gets StateWarningMessage Label
		/// </summary> 
		private Label StateWarningMessage
		{
			get { return new Label("StateWarningMessage", "//span[contains(@id,'PurchaseContainer_cvState')]", 0, false); }
		}

		/// <summary>
		/// Gets BillingAddressCheckbox Checkbox
		/// </summary> 
		private Checkbox BillingAddressCheckbox
		{
			get { return new Checkbox("BillingAddressCheckbox", "//input[contains(@id,'DifferentBillingAddress')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressFirstLineBillingAddress Textbox
		/// </summary> 
		private Textbox AddressFirstLineBillingAddress
		{
			get { return new Textbox("AddressFirstLineBillingAddress", "//input[contains(@id, 'Address1')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressSecondLineBillingAddress Textbox
		/// </summary> 
		private Textbox AddressSecondLineBillingAddress
		{
			get { return new Textbox("AddressSecondLineBillingAddress", "//input[contains(@id, 'Address2')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressThirdLineBillingAddress Textbox
		/// </summary> 
		private Textbox AddressThirdLineBillingAddress
		{
			get { return new Textbox("AddressThirdLineBillingAddress", "//input[contains(@id, 'Address3')]", 0, false); }
		}

		/// <summary>
		/// Gets PostCodeBillingAddress Textbox
		/// </summary> 
		private Textbox PostCodeBillingAddress
		{
			get { return new Textbox("PostCodeBillingAddress", "//input[contains(@id, 'Address3')]", 0, false); }
		}

		/// <summary>
		/// Gets CityBillingAddress Textbox
		/// </summary> 
		private Textbox CityBillingAddress
		{
			get { return new Textbox("CityBillingAddress", "//input[contains(@id,'PurchaseContainer_PaymentCity')]", 0, false); }
		}

		/// <summary>
		/// Gets CountryBillingAddress Dropdown
		/// </summary> 
		private Dropdown CountryBillingAddress
		{
			get { return new Dropdown("CountryBillingAddress", "//input[contains(@id, 'Address3')]", 0, false); }
		}

		/// <summary>
		/// Gets StateOrProvincesBillingAddress Dropdown
		/// </summary> 
		private Dropdown StateOrProvincesBillingAddress
		{
			get { return new Dropdown("StateOrProvincesBillingAddress", "//select[contains(@id,'PurchaseContainer_PaymentState')]", 0, false); }
		}

		/// <summary>
		/// Gets Country Dropdown
		/// </summary> 
		private Dropdown Country
		{
			get { return new Dropdown("Country", "//select[contains(@id,'Country')]", 0, false); }
		}

		/// <summary>
		/// Gets PrivacyPolicy Checkbox
		/// </summary> 
		private Checkbox PrivacyPolicy
		{
			get { return new Checkbox("PrivacyPolicy", "//input[@id=//label[a[text()='Privacy Policy']]/@for]", 0, true); }
		}

		/// <summary>
		/// Gets TermsAndConditions Checkbox
		/// </summary> 
		private Checkbox TermsAndConditions
		{
			get { return new Checkbox("TermsAndConditions", "//input[contains(@id,'TermsAndConditions')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressFirstLine Textbox
		/// </summary> 
		private Textbox AddressFirstLine
		{
			get { return new Textbox("AddressFirstLine", "//input[contains(@id, 'Address1')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressSecondLine Textbox
		/// </summary> 
		private Textbox AddressSecondLine
		{
			get { return new Textbox("AddressSecondLine", "//input[contains(@id, 'Address2')]", 0, false); }
		}

		/// <summary>
		/// Gets City Textbox
		/// </summary> 
		private Textbox City
		{
			get { return new Textbox("City", "//input[contains(@id, 'City')]", 0, false); }
		}

		/// <summary>
		/// Gets PostCode Textbox
		/// </summary> 
		private Textbox PostCode
		{
			get { return new Textbox("PostCode", "//input[contains(@id, 'Post')]", 0, false); }
		}

		/// <summary>
		/// Gets Telephone Textbox
		/// </summary> 
		private Textbox Telephone
		{
			get { return new Textbox("Telephone", "//input[contains(@id, 'TelephoneNumber')]", 0, false); }
		}

		/// <summary>
		/// Gets Submit Button
		/// </summary> 
		private Button Submit
		{
			get { return new Button("Submit", "//input[@value='Next']", 0, false); }
		}

		/// <summary>
		/// Gets TitleValidationMessage Label
		/// </summary> 
		private Label TitleValidationMessage
		{
			get { return new Label("TitleValidationMessage", "//span[text()='You must select a title']", 0, false); }
		}

		/// <summary>
		/// Gets FirstNameValidationMessage Label
		/// </summary> 
		private Label FirstNameValidationMessage
		{
			get { return new Label("FirstNameValidationMessage", "//span[text()= 'You must enter an first name']", 0, false); }
		}

		/// <summary>
		/// Gets LastNameValidationMessage Label
		/// </summary> 
		private Label LastNameValidationMessage
		{
			get { return new Label("LastNameValidationMessage", "//span[text()= 'You must enter a surname']", 0, false); }
		}

		/// <summary>
		/// Gets JobTitleValidationMessage Label
		/// </summary> 
		private Label JobTitleValidationMessage
		{
			get { return new Label("JobTitleValidationMessage", "//span[text()='You must enter a job title']", 0, false); }
		}

		/// <summary>
		/// Gets CompanyNameValidationMessage Label
		/// </summary> 
		private Label CompanyNameValidationMessage
		{
			get { return new Label("CompanyNameValidationMessage", "//span[text()= 'You must enter a company name']", 0, false); }
		}

		/// <summary>
		/// Gets CompanyPositionValidationMessage Label
		/// </summary> 
		private Label CompanyPositionValidationMessage
		{
			get { return new Label("CompanyPositionValidationMessage", "//span[text()= 'You must select a  job title']", 0, true); }
		}

		/// <summary>
		/// Gets CompanyTypeValidationMessage Label
		/// </summary> 
		private Label CompanyTypeValidationMessage
		{
			get { return new Label("CompanyTypeValidationMessage", "//span[text()= 'You must select a company type']", 0, true); }
		}

		/// <summary>
		/// Gets AddressFirstLineValidationMessage Label
		/// </summary> 
		private Label AddressFirstLineValidationMessage
		{
			get { return new Label("AddressFirstLineValidationMessage", "//span[text()='You must enter the first line of your address']", 0, false); }
		}

		/// <summary>
		/// Gets AddressSecondLineValidationMessage Label
		/// </summary> 
		private Label AddressSecondLineValidationMessage
		{
			get { return new Label("AddressSecondLineValidationMessage", "//span[text()='You must enter the second line of your address']", 0, true); }
		}

		/// <summary>
		/// Gets TelephoneNumberValidationMessage Label
		/// </summary> 
		private Label TelephoneNumberValidationMessage
		{
			get { return new Label("TelephoneNumberValidationMessage", "//span[text()= 'You must enter a telephone number']", 0, false); }
		}

		/// <summary>
		/// Gets AddressValidationMessage Label
		/// </summary> 
		private Label AddressValidationMessage
		{
			get { return new Label("AddressValidationMessage", "//span[text()='You must enter the first line of your address']", 0, false); }
		}

		/// <summary>
		/// Gets CityValidationMessage Label
		/// </summary> 
		private Label CityValidationMessage
		{
			get { return new Label("CityValidationMessage", "//span[text()='You must enter a city']", 0, false); }
		}

		/// <summary>
		/// Gets ZipValidationMessage Label
		/// </summary> 
		private Label ZipValidationMessage
		{
			get { return new Label("ZipValidationMessage", "//span[text()='You must enter a post/zip code']", 0, false); }
		}

		/// <summary>
		/// Gets CountryValidationMessage Label
		/// </summary> 
		private Label CountryValidationMessage
		{
			get { return new Label("CountryValidationMessage", "//span[text()='You must select a country']", 0, false); }
		}

		/// <summary>
		/// Gets PaymentMethod Dropdown
		/// </summary> 
		private Dropdown PaymentMethod
		{
			get { return new Dropdown("PaymentMethod", "//select[contains(@id,'PaymentType')]", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageInvalidFirstName Label
		/// </summary> 
		private Label WarningMessageInvalidFirstName
		{
			get { return new Label("WarningMessageInvalidFirstName", "//span[text()='The first name you have entered is invalid']", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageInvalidLastName Label
		/// </summary> 
		private Label WarningMessageInvalidLastName
		{
			get { return new Label("WarningMessageInvalidLastName", "//span[text()='The last name you have entered is invalid']", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageInvalidCompanyName Label
		/// </summary> 
		private Label WarningMessageInvalidCompanyName
		{
			get { return new Label("WarningMessageInvalidCompanyName", "//span[text()='The company name you have entered is invalid']", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageEmptyCompanyName Label
		/// </summary> 
		private Label WarningMessageEmptyCompanyName
		{
			get { return new Label("WarningMessageEmptyCompanyName", "//span[text()='You must enter a company name']", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageEmptyFirstName Label
		/// </summary> 
		private Label WarningMessageEmptyFirstName
		{
			get { return new Label("WarningMessageEmptyFirstName", "//span[text()='You must enter a first name']", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageEmptyLastName Label
		/// </summary> 
		private Label WarningMessageEmptyLastName
		{
			get { return new Label("WarningMessageEmptyLastName", "//span[text()='You must enter a surname']", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageEmptyCity Label
		/// </summary> 
		private Label WarningMessageEmptyCity
		{
			get { return new Label("WarningMessageEmptyCity", "//span[text()='You must enter a city']", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageEmptyJobTitle Label
		/// </summary> 
		private Label WarningMessageEmptyJobTitle
		{
			get { return new Label("WarningMessageEmptyJobTitle", "//span[text()='You must enter a job title']", 0, false); }
		}

		/// <summary>
		/// Gets WarningMessageEmptyZip Label
		/// </summary> 
		private Label WarningMessageEmptyZip
		{
			get { return new Label("WarningMessageEmptyZip", "//span[text()='You must enter a post/zip code']", 0, false); }
		}

	}
}
	
