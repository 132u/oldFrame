// -----------------------------------------------------------------------
// <copyright file="SubscriptionPaymentPage.cs" company="Euromoney">
// TODO: Update copyright text.
// </copyright>
// <auto-generated />
// -----------------------------------------------------------------------
namespace PageObjects.PageObjects
{
	using System.Collections.Generic;
	using System.Globalization;
	using Core;
	using Core.Controls;
	using Core.Configuration;
	using ConfigManager;

	/// <summary> 
	/// Initializes a new instance of the SubscriptionPaymentPage class
	/// </summary>
	public partial class SubscriptionPaymentPage 
	{	
		public SubscriptionPaymentPage(bool optional=false)
		{
			this.Optional = optional;
		}


		/// <summary>
		/// Gets PaymentFrame Label
		/// </summary> 
		public Label PaymentFrame
		{
			get { return new Label("PaymentFrame", "//iframe[contains(@id,'CyberSource')]", 0, false); }
		}

		/// <summary>
		/// Gets ErrorMessageIfPageIsNotDisplayed Label
		/// </summary> 
		public Label ErrorMessageIfPageIsNotDisplayed
		{
			get { return new Label("ErrorMessageIfPageIsNotDisplayed", "//*[contains(text(),'Sorry, we are experiencing some technical problems with the page you requested.') or contains(text(),'An error has occurred') or contains(text(),'The page cannot be displayed because an internal server error has occurred.') or contains(text(),'error')]", 0, false); }
		}

		/// <summary>
		/// Gets CreditCardNumber Textbox
		/// </summary> 
		private Textbox CreditCardNumber
		{
			get { return new Textbox("CreditCardNumber", "//input[@id='card_number']", 0, false); }
		}

		/// <summary>
		/// Gets CVN Textbox
		/// </summary> 
		private Textbox CVN
		{
			get { return new Textbox("CVN", "//input[@id='card_cvn']", 0, false); }
		}

		/// <summary>
		/// Gets TypeCard Dropdown
		/// </summary> 
		private Dropdown TypeCard
		{
			get { return new Dropdown("TypeCard", "//select[@id='card_type']", 0, false); }
		}

		/// <summary>
		/// Gets ExpirationMonth Dropdown
		/// </summary> 
		private Dropdown ExpirationMonth
		{
			get { return new Dropdown("ExpirationMonth", "//select[contains(@id, 'card_expiry_month')]", 0, false); }
		}

		/// <summary>
		/// Gets ExpirationYear Dropdown
		/// </summary> 
		private Dropdown ExpirationYear
		{
			get { return new Dropdown("ExpirationYear", "//select[contains(@id, 'card_expiry_year')]", 0, false); }
		}

		/// <summary>
		/// Gets Buy Button
		/// </summary> 
		private Button Buy
		{
			get { return new Button("Buy", "//input[@value='Pay']", 0, false); }
		}

		/// <summary>
		/// Gets NumberCardWarning Label
		/// </summary> 
		private Label NumberCardWarning
		{
			get { return new Label("NumberCardWarning", "//div[text()='Enter a valid card number']", 0, false); }
		}

		/// <summary>
		/// Gets IvalidInfoWarning Label
		/// </summary> 
		private Label IvalidInfoWarning
		{
			get { return new Label("IvalidInfoWarning", "//p[text()='Your order was declined. Please verify your information.']", 0, false); }
		}

		/// <summary>
		/// Gets SubscriptionPaymentPageRequiredElements list
		/// </summary>
		public RequiredElements SubscriptionPaymentPageRequiredElements
		{
			get
			{
				return new RequiredElements
				{
					Name = "SubscriptionPaymentPageRequiredElements",
					Xpath = "//div[@class='footer_box']",
					Filter = "a",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "a",
							Type = "Link",
							Attributes = new Dictionary<string, string>
							{
								{"href","javascript:{};"}
							}
						}
					}
				};
			}
		}

	}
}
	
