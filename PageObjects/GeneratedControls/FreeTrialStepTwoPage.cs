// -----------------------------------------------------------------------
// <copyright file="FreeTrialStepTwoPage.cs" company="Euromoney">
// TODO: Update copyright text.
// </copyright>
// <auto-generated />
// -----------------------------------------------------------------------
namespace PageObjects.PageObjects
{
	using System.Collections.Generic;
	using System.Globalization;
	using Core;
	using Core.Controls;
	using Core.Configuration;
	using ConfigManager;

	/// <summary> 
	/// Initializes a new instance of the FreeTrialStepTwoPage class
	/// </summary>
	public partial class FreeTrialStepTwoPage 
	{	
		public FreeTrialStepTwoPage(bool optional=false)
		{
			this.Optional = optional;
		}


		/// <summary>
		/// Gets YourDetailsHeader Label
		/// </summary> 
		private Label YourDetailsHeader
		{
			get { return new Label("YourDetailsHeader", "//h2[text()='YOUR DETAILS']", 0, false); }
		}

		/// <summary>
		/// Gets Title Dropdown
		/// </summary> 
		private Dropdown Title
		{
			get { return new Dropdown("Title", "//select[contains(@id,'Title')]", 0, false); }
		}

		/// <summary>
		/// Gets FirstName Textbox
		/// </summary> 
		private Textbox FirstName
		{
			get { return new Textbox("FirstName", "//input[contains(@id,'FirstName')]", 0, false); }
		}

		/// <summary>
		/// Gets LastName Textbox
		/// </summary> 
		private Textbox LastName
		{
			get { return new Textbox("LastName", "//input[contains(@id,'LastName')]", 0, false); }
		}

		/// <summary>
		/// Gets JobTitle Textbox
		/// </summary> 
		private Textbox JobTitle
		{
			get { return new Textbox("JobTitle", "//input[contains(@id,'Position')]", 0, false); }
		}

		/// <summary>
		/// Gets CompanyName Textbox
		/// </summary> 
		private Textbox CompanyName
		{
			get { return new Textbox("CompanyName", "//input[contains(@id,'CompanyName')]", 0, false); }
		}

		/// <summary>
		/// Gets CompanyPosition Dropdown
		/// </summary> 
		private Dropdown CompanyPosition
		{
			get { return new Dropdown("CompanyPosition", "//span[contains(., 'Please select a position') and contains(@style, 'display: inline')]", 0, true); }
		}

		/// <summary>
		/// Gets CompanyType Dropdown
		/// </summary> 
		private Dropdown CompanyType
		{
			get { return new Dropdown("CompanyType", "//select[contains(@id,'CompanyType')]", 0, false); }
		}

		/// <summary>
		/// Gets Country Dropdown
		/// </summary> 
		private Dropdown Country
		{
			get { return new Dropdown("Country", "//select[contains(@id,'Country')]", 0, false); }
		}

		/// <summary>
		/// Gets PrivacyPolicy Checkbox
		/// </summary> 
		private Checkbox PrivacyPolicy
		{
			get { return new Checkbox("PrivacyPolicy", "//input[@id=//label[a[text()='Privacy Policy']]/@for]", 0, true); }
		}

		/// <summary>
		/// Gets TermsAndConditions Checkbox
		/// </summary> 
		private Checkbox TermsAndConditions
		{
			get { return new Checkbox("TermsAndConditions", "//input[contains(@id,'TermsAndConditions')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressFirstLine Textbox
		/// </summary> 
		private Textbox AddressFirstLine
		{
			get { return new Textbox("AddressFirstLine", "//input[contains(@id, 'Address1')]", 0, false); }
		}

		/// <summary>
		/// Gets AddressSecondLine Textbox
		/// </summary> 
		private Textbox AddressSecondLine
		{
			get { return new Textbox("AddressSecondLine", "//input[contains(@id, 'Address2')]", 0, true); }
		}

		/// <summary>
		/// Gets City Textbox
		/// </summary> 
		private Textbox City
		{
			get { return new Textbox("City", "//input[contains(@id, 'City')]", 0, false); }
		}

		/// <summary>
		/// Gets PostCode Textbox
		/// </summary> 
		private Textbox PostCode
		{
			get { return new Textbox("PostCode", "//input[contains(@id, 'Post')]", 0, false); }
		}

		/// <summary>
		/// Gets Telephone Textbox
		/// </summary> 
		private Textbox Telephone
		{
			get { return new Textbox("Telephone", "//input[contains(@id, 'TelephoneNumber')]", 0, false); }
		}

		/// <summary>
		/// Gets Submit Button
		/// </summary> 
		private Button Submit
		{
			get { return new Button("Submit", "//input[@value='Next']", 0, false); }
		}

		/// <summary>
		/// Gets TitleValidationMessage Label
		/// </summary> 
		private Label TitleValidationMessage
		{
			get { return new Label("TitleValidationMessage", "//span[text()='You must select a title']", 0, false); }
		}

		/// <summary>
		/// Gets FirstNameValidationMessage Label
		/// </summary> 
		private Label FirstNameValidationMessage
		{
			get { return new Label("FirstNameValidationMessage", "//span[text()= 'You must enter an first name']", 0, false); }
		}

		/// <summary>
		/// Gets LastNameValidationMessage Label
		/// </summary> 
		private Label LastNameValidationMessage
		{
			get { return new Label("LastNameValidationMessage", "//span[text()= 'You must enter a surname']", 0, false); }
		}

		/// <summary>
		/// Gets JobTitleValidationMessage Label
		/// </summary> 
		private Label JobTitleValidationMessage
		{
			get { return new Label("JobTitleValidationMessage", "//span[text()='You must enter a job title']", 0, false); }
		}

		/// <summary>
		/// Gets CompanyNameValidationMessage Label
		/// </summary> 
		private Label CompanyNameValidationMessage
		{
			get { return new Label("CompanyNameValidationMessage", "//span[text()= 'You must enter a company name']", 0, false); }
		}

		/// <summary>
		/// Gets CompanyPositionValidationMessage Label
		/// </summary> 
		private Label CompanyPositionValidationMessage
		{
			get { return new Label("CompanyPositionValidationMessage", "//span[text()= 'You must select a  job title']", 0, true); }
		}

		/// <summary>
		/// Gets CompanyTypeValidationMessage Label
		/// </summary> 
		private Label CompanyTypeValidationMessage
		{
			get { return new Label("CompanyTypeValidationMessage", "//span[text()= 'You must select a company type']", 0, true); }
		}

		/// <summary>
		/// Gets AddressFirstLineValidationMessage Label
		/// </summary> 
		private Label AddressFirstLineValidationMessage
		{
			get { return new Label("AddressFirstLineValidationMessage", "//span[text()='You must enter the first line of your address']", 0, false); }
		}

		/// <summary>
		/// Gets AddressSecondLineValidationMessage Label
		/// </summary> 
		private Label AddressSecondLineValidationMessage
		{
			get { return new Label("AddressSecondLineValidationMessage", "//span[text()='You must enter the second line of your address']", 0, true); }
		}

		/// <summary>
		/// Gets TelephoneNumberValidationMessage Label
		/// </summary> 
		private Label TelephoneNumberValidationMessage
		{
			get { return new Label("TelephoneNumberValidationMessage", "//span[text()= 'You must enter a telephone number']", 0, false); }
		}

		/// <summary>
		/// Gets AddressValidationMessage Label
		/// </summary> 
		private Label AddressValidationMessage
		{
			get { return new Label("AddressValidationMessage", "//span[text()='You must enter the first line of your address']", 0, false); }
		}

		/// <summary>
		/// Gets CityValidationMessage Label
		/// </summary> 
		private Label CityValidationMessage
		{
			get { return new Label("CityValidationMessage", "//span[text()='You must enter a city']", 0, false); }
		}

		/// <summary>
		/// Gets ZipValidationMessage Label
		/// </summary> 
		private Label ZipValidationMessage
		{
			get { return new Label("ZipValidationMessage", "//span[text()='You must enter a post/zip code']", 0, false); }
		}

		/// <summary>
		/// Gets CountryValidationMessage Label
		/// </summary> 
		private Label CountryValidationMessage
		{
			get { return new Label("CountryValidationMessage", "//span[text()='You must select a country']", 0, false); }
		}

		/// <summary>
		/// Gets FreeTrialStepTwoSignUpStatus list
		/// </summary>
		public RequiredElements FreeTrialStepTwoSignUpStatus
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoSignUpStatus",
					Xpath = "//table[@class='FreeTrialProgressbar progressbar']",
					Filter = "td",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "td",
							Type = "td",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Select Products"}
							}
						}, new Element
						{
							Name = "td",
							Type = "td",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Email Address"}
							}
						}, new Element
						{
							Name = "td",
							Type = "td",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Your Details"}
							}
						}, new Element
						{
							Name = "td",
							Type = "td",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Confirmation"}
							}
						}
					}
				};
			}
		}

		/// <summary>
		/// Gets FreeTrialStepTwoYourDetailsSection list
		/// </summary>
		public RequiredElements FreeTrialStepTwoYourDetailsSection
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoYourDetailsSection",
					Xpath = "//div[@class='checkout']/div[1]",
					Filter = "label|p|h2",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "h2",
							Type = "h2",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","YOUR DETAILS"}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Fields marked * are mandatory."}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Email Address: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Title: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","First Name: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Last Name: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Company Name: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Company Type: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Job Title *"}
							}
						}
					}
				};
			}
		}

		/// <summary>
		/// Gets FreeTrialStepTwoDeliveryAddressSection list
		/// </summary>
		public RequiredElements FreeTrialStepTwoDeliveryAddressSection
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoDeliveryAddressSection",
					Xpath = "//div[@class='deliveryaddress']",
					Filter = "label|p|h2",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "h2",
							Type = "h2",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","ADDRESS"}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Fields marked * are mandatory."}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Address 1: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Address 2:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Address 3:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","City: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","US State:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","OR County:"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Postcode/Zip: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Country: *"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Telephone: *"}
							}
						}
					}
				};
			}
		}

		/// <summary>
		/// Gets FreeTrialStepTwoEmailPreferencesSection list
		/// </summary>
		public RequiredElements FreeTrialStepTwoEmailPreferencesSection
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoEmailPreferencesSection",
					Xpath = "//div[@class='emailPrefs']",
					Filter = "p|h2|tr",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "h2",
							Type = "h2",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","EMAIL PREFERENCES"}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText",""}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","Email Format (Text version recommended for Lotus Notes and BlackBerry users)"}
							}
						}
					}
				};
			}
		}

		/// <summary>
		/// Gets FreeTrialStepTwoDataProtectionSection list
		/// </summary>
		public RequiredElements FreeTrialStepTwoDataProtectionSection
		{
			get
			{
				return new RequiredElements
				{
					Name = "FreeTrialStepTwoDataProtectionSection",
					Xpath = "//div[@class='dataprotection']",
					Filter = "label|p|h2",
					Optional = false,
					List = new List<Element>
					{
						new Element
						{
							Name = "h2",
							Type = "h2",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","DATA PROTECTION"}
							}
						}, new Element
						{
							Name = "p",
							Type = "p",
							Attributes = new Dictionary<string, string>
							{
								{"innerText","The information you provide will be safeguarded by the Euromoney Institutional Investor                            PLC group, whose subsidiaries may use it to keep you informed of relevant products                            and services. We occasionally allow reputable companies outside Euromoney Institutional                            Investor PLC group to contact you with details of products which may be of interest                            to you. As an international group, we may transfer your data on a global basis for                            the purposes indicated above."}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_phMain_ShowCheckoutControl_PurchaseContainer_lblCanContactEmail"},
								{"innerText","If you object to being contacted regarding other Euromoney products by email please tick"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_phMain_ShowCheckoutControl_PurchaseContainer_lblCanContactTelephone"},
								{"innerText","If you object to being contacted regarding other Euromoney products by telephone please tick"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_phMain_ShowCheckoutControl_PurchaseContainer_lblCanContactFax"},
								{"innerText","If you object to being contacted regarding other Euromoney products by fax please tick"}
							}
						}, new Element
						{
							Name = "label",
							Type = "label",
							Attributes = new Dictionary<string, string>
							{
								{"id","ctl00_phMain_ShowCheckoutControl_PurchaseContainer_lblCanContactThirdParty"},
								{"innerText","If you do not object to being contacted by third parties please tick"}
							}
						}
					}
				};
			}
		}

	}
}
	
